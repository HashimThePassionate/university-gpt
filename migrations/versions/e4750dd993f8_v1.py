"""v1

Revision ID: e4750dd993f8
Revises: 
Create Date: 2024-01-29 19:45:29.978797

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e4750dd993f8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instructors',
    sa.Column('instructor_id', sa.UUID(), nullable=False),
    sa.Column('instructor_code', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('verified_email', sa.Boolean(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('father_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('user_type', sa.Enum('ADMIN', 'MOD', 'STUDENT', 'INSTRUCTOR', name='usertype'), nullable=True),
    sa.Column('profile_picture', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('instructor_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('interests',
    sa.Column('interest_id', sa.UUID(), nullable=False),
    sa.Column('interest_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('interest_id')
    )
    op.create_table('programs',
    sa.Column('program_id', sa.UUID(), nullable=False),
    sa.Column('program_name', sa.String(), nullable=False),
    sa.Column('program_description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('program_id')
    )
    op.create_table('qualifications',
    sa.Column('qualification_id', sa.UUID(), nullable=False),
    sa.Column('qualification_name', sa.String(), nullable=False),
    sa.Column('qualification_start_date', sa.String(), nullable=False),
    sa.Column('qualification_end_date', sa.String(), nullable=False),
    sa.Column('qualification_institute', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('qualification_id')
    )
    op.create_table('universities',
    sa.Column('university_id', sa.UUID(), nullable=False),
    sa.Column('university_name', sa.String(), nullable=False),
    sa.Column('university_description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('university_id')
    )
    op.create_table('courses',
    sa.Column('course_id', sa.UUID(), nullable=False),
    sa.Column('course_name', sa.String(), nullable=False),
    sa.Column('course_description', sa.String(), nullable=True),
    sa.Column('program_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['programs.program_id'], ),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_table('instructor_courses',
    sa.Column('instructor_course_id', sa.UUID(), nullable=False),
    sa.Column('instructor_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['instructor_id'], ['instructors.instructor_id'], ),
    sa.PrimaryKeyConstraint('instructor_course_id')
    )
    op.create_table('skills',
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('skill_name', sa.String(), nullable=False),
    sa.Column('skill_description', sa.String(), nullable=True),
    sa.Column('program_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['programs.program_id'], ),
    sa.PrimaryKeyConstraint('skill_id')
    )
    op.create_table('students',
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('student_roll_number', sa.String(), nullable=True),
    sa.Column('program_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('verified_email', sa.Boolean(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('father_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('user_type', sa.Enum('ADMIN', 'MOD', 'STUDENT', 'INSTRUCTOR', name='usertype'), nullable=True),
    sa.Column('profile_picture', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['program_id'], ['programs.program_id'], ),
    sa.PrimaryKeyConstraint('student_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('quizzes',
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('quiz_name', sa.String(), nullable=False),
    sa.Column('quiz_time_limit_mins', sa.Integer(), nullable=False),
    sa.Column('quiz_description', sa.String(), nullable=True),
    sa.Column('course_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ),
    sa.PrimaryKeyConstraint('quiz_id')
    )
    op.create_table('topics',
    sa.Column('topic_id', sa.UUID(), nullable=False),
    sa.Column('topic_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('course_id', sa.UUID(), nullable=True),
    sa.Column('parent_topic_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ),
    sa.ForeignKeyConstraint(['parent_topic_id'], ['topics.topic_id'], ),
    sa.PrimaryKeyConstraint('topic_id')
    )
    op.create_table('contents',
    sa.Column('content_id', sa.UUID(), nullable=False),
    sa.Column('content_text', sa.String(), nullable=False),
    sa.Column('topic_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.topic_id'], ),
    sa.PrimaryKeyConstraint('content_id')
    )
    op.create_table('questions',
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('question_text', sa.String(), nullable=False),
    sa.Column('question_difficulty', sa.Enum('EASY', 'MEDIUM', 'HARD', name='questiondifficultyenum'), nullable=False),
    sa.Column('question_points', sa.String(), nullable=False),
    sa.Column('topic_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.topic_id'], ),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.create_table('quiz_answer_sheets',
    sa.Column('answer_sheet_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('quiz_status', sa.Enum('TO_DO', 'IN_PROGRESS', 'SUBMITTED', 'COMPLETED', name='quizstatusenum'), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.quiz_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
    sa.PrimaryKeyConstraint('answer_sheet_id')
    )
    op.create_table('quiz_topic',
    sa.Column('quiz_topic_id', sa.UUID(), nullable=False),
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('topic_id', sa.UUID(), nullable=False),
    sa.Column('parent_quiz_topic_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['parent_quiz_topic_id'], ['quiz_topic.quiz_topic_id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.quiz_id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.topic_id'], ),
    sa.PrimaryKeyConstraint('quiz_topic_id')
    )
    op.create_table('answers',
    sa.Column('answer_id', sa.UUID(), nullable=False),
    sa.Column('answer_sheet_id', sa.UUID(), nullable=False),
    sa.Column('points_received', sa.Float(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['answer_sheet_id'], ['quiz_answer_sheets.answer_sheet_id'], ),
    sa.PrimaryKeyConstraint('answer_id')
    )
    op.create_table('case_studies',
    sa.Column('case_study_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['case_study_id'], ['questions.question_id'], ),
    sa.PrimaryKeyConstraint('case_study_id')
    )
    op.create_table('coding_questions',
    sa.Column('coding_question_id', sa.UUID(), nullable=False),
    sa.Column('correct_answer', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['coding_question_id'], ['questions.question_id'], ),
    sa.PrimaryKeyConstraint('coding_question_id')
    )
    op.create_table('free_text_questions',
    sa.Column('free_text_id', sa.UUID(), nullable=False),
    sa.Column('correct_answer', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['free_text_id'], ['questions.question_id'], ),
    sa.PrimaryKeyConstraint('free_text_id')
    )
    op.create_table('case_studies_answers',
    sa.Column('answer_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['answers.answer_id'], ),
    sa.PrimaryKeyConstraint('answer_id')
    )
    op.create_table('coding_answers',
    sa.Column('answer_id', sa.UUID(), nullable=False),
    sa.Column('filled_answer', sa.Text(), nullable=False),
    sa.Column('coding_question_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['answers.answer_id'], ),
    sa.ForeignKeyConstraint(['coding_question_id'], ['coding_questions.coding_question_id'], ),
    sa.PrimaryKeyConstraint('answer_id')
    )
    op.create_table('free_text_answers',
    sa.Column('answer_id', sa.UUID(), nullable=False),
    sa.Column('filled_answer', sa.Text(), nullable=False),
    sa.Column('free_text_question_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['answers.answer_id'], ),
    sa.ForeignKeyConstraint(['free_text_question_id'], ['free_text_questions.free_text_id'], ),
    sa.PrimaryKeyConstraint('answer_id')
    )
    op.create_table('multi_mcq_questions',
    sa.Column('multi_mcq_id', sa.UUID(), nullable=False),
    sa.Column('case_study_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['case_study_id'], ['case_studies.case_study_id'], ),
    sa.ForeignKeyConstraint(['multi_mcq_id'], ['questions.question_id'], ),
    sa.PrimaryKeyConstraint('multi_mcq_id')
    )
    op.create_table('multi_mcq_select_answer',
    sa.Column('answer_id', sa.UUID(), nullable=False),
    sa.Column('selected_mcq_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['answers.answer_id'], ),
    sa.PrimaryKeyConstraint('answer_id')
    )
    op.create_table('single_mcq_questions',
    sa.Column('single_mcq_id', sa.UUID(), nullable=False),
    sa.Column('case_study_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['case_study_id'], ['case_studies.case_study_id'], ),
    sa.ForeignKeyConstraint(['single_mcq_id'], ['questions.question_id'], ),
    sa.PrimaryKeyConstraint('single_mcq_id')
    )
    op.create_table('join_case_study_answers',
    sa.Column('join_case_study_answers_id', sa.UUID(), nullable=False),
    sa.Column('case_study_answer_id', sa.UUID(), nullable=False),
    sa.Column('single_select_mcq_answer_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['case_study_answer_id'], ['case_studies_answers.answer_id'], ),
    sa.PrimaryKeyConstraint('join_case_study_answers_id')
    )
    op.create_table('multi_select_options',
    sa.Column('multi_select_option_id', sa.UUID(), nullable=False),
    sa.Column('option_text', sa.String(), nullable=False),
    sa.Column('option_is_correct', sa.Boolean(), nullable=False),
    sa.Column('option_question_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['option_question_id'], ['multi_mcq_questions.multi_mcq_id'], ),
    sa.PrimaryKeyConstraint('multi_select_option_id')
    )
    op.create_table('option_multi_select_answers',
    sa.Column('option_multi_select_answers_id', sa.UUID(), nullable=False),
    sa.Column('multi_select_mcq_answer_id', sa.UUID(), nullable=False),
    sa.Column('select_mcq_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['multi_select_mcq_answer_id'], ['multi_mcq_select_answer.answer_id'], ),
    sa.PrimaryKeyConstraint('option_multi_select_answers_id')
    )
    op.create_table('single_mcq_select_answer',
    sa.Column('answer_id', sa.UUID(), nullable=False),
    sa.Column('selected_mcq_id', sa.UUID(), nullable=False),
    sa.Column('single_select_mcq_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['answers.answer_id'], ),
    sa.ForeignKeyConstraint(['single_select_mcq_id'], ['single_mcq_questions.single_mcq_id'], ),
    sa.PrimaryKeyConstraint('answer_id')
    )
    op.create_table('single_select_options',
    sa.Column('single_select_option_id', sa.UUID(), nullable=False),
    sa.Column('option_text', sa.String(), nullable=False),
    sa.Column('option_is_correct', sa.Boolean(), nullable=False),
    sa.Column('single_select_mcq', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['single_select_mcq'], ['single_mcq_questions.single_mcq_id'], ),
    sa.PrimaryKeyConstraint('single_select_option_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('single_select_options')
    op.drop_table('single_mcq_select_answer')
    op.drop_table('option_multi_select_answers')
    op.drop_table('multi_select_options')
    op.drop_table('join_case_study_answers')
    op.drop_table('single_mcq_questions')
    op.drop_table('multi_mcq_select_answer')
    op.drop_table('multi_mcq_questions')
    op.drop_table('free_text_answers')
    op.drop_table('coding_answers')
    op.drop_table('case_studies_answers')
    op.drop_table('free_text_questions')
    op.drop_table('coding_questions')
    op.drop_table('case_studies')
    op.drop_table('answers')
    op.drop_table('quiz_topic')
    op.drop_table('quiz_answer_sheets')
    op.drop_table('questions')
    op.drop_table('contents')
    op.drop_table('topics')
    op.drop_table('quizzes')
    op.drop_table('students')
    op.drop_table('skills')
    op.drop_table('instructor_courses')
    op.drop_table('courses')
    op.drop_table('universities')
    op.drop_table('qualifications')
    op.drop_table('programs')
    op.drop_table('interests')
    op.drop_table('instructors')
    # ### end Alembic commands ###
